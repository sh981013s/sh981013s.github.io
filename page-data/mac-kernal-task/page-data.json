{"componentChunkName":"component---src-templates-post-jsx","path":"/mac-kernal-task/","result":{"data":{"site":{"siteMetadata":{"title":"hwani.dev"}},"markdownRemark":{"id":"3653cebd-84f0-5d9f-b911-7e3380e26d2f","excerpt":"서론 내 개발환경을 보자면,  를 클렘쉘 모드로 덮어놓고, , ,  를 연결하여\n사용하고 있다. 하지만 줌(Zoom) 을 사용한다던가, 내가 사용하는 무거운? IDE 인 Webstorm 으로 개발을하며, 따로 서버까지 여는경우에는 타자치기가 힘들정도로\n버벅이고 맥북에서는 비행기 이륙하는 소리가 났다. 이러한 현상이 하루에도 수십번 일어나다 보니 도저히 나…","html":"<h2>서론</h2>\n<p>내 개발환경을 보자면, <code class=\"language-text\">2019(Late) Macbook Pro 16'</code> 를 클렘쉘 모드로 덮어놓고, <code class=\"language-text\">외장모니터 2개</code>, <code class=\"language-text\">외장 키보드</code>, <code class=\"language-text\">외장 마우스</code> 를 연결하여\n사용하고 있다.</p>\n<p>하지만 줌(Zoom) 을 사용한다던가, 내가 사용하는 무거운? IDE 인 Webstorm 으로 개발을하며, 따로 서버까지 여는경우에는 타자치기가 힘들정도로\n버벅이고 맥북에서는 비행기 이륙하는 소리가 났다. 이러한 현상이 하루에도 수십번 일어나다 보니 도저히 나의 인내심이 견딜 수 없는 지경까지 도달하였다.</p>\n<p><code class=\"language-text\">Activity Monitor</code> 를 사용하여 무슨 문제가 있나 확인해보니 <code class=\"language-text\">kernel_task</code> 란 녀석이\ncpu 사용량을 무려 900% 를 사용하고 있다고 떡하니 적혀있었다.</p>\n<hr>\n<h2>본론</h2>\n<h3>커널테스크 (kernal_task) 는 무엇일까?</h3>\n<p>커널테스크란 <code class=\"language-text\">linux</code> 의 최상위 제어권자이자 핵심 기능이다. </br>\ncpu 의 온도센서 중 하나라도 일정 수치를 넘게되면 내부적인 발열로 인하여\n컴퓨터의 고장을 방지하기위해 임의로 가상으로 커널테스크 프로세스 자체에 과부화를 걸게된다. </br>\n이로인하여 컴퓨터는 <code class=\"language-text\">쓰로틀링(throttling)</code> 이 걸리게 되며, 정상적인 작동을 할 수 없는 환경을 마주치게 되며, cpu 를 점유하고 있던 다른 프로세서들의\n작동에 제한이 걸리며 cpu 의 온도가 정상적으로 돌아오게 만드는 녀석이라고도 부를 수 있다.</p>\n<h3>통상적이지만 효과가 없거나 불가능한 해결책들</h3>\n<p>그렇다면 커널테스크가 점유율을 높여 다른 프로세스들의 작동을 제한하면, </br>\n우리는 매번 하루에 수십번씩 '그렇구나~ 그럼 잠시 작업을 멈춰야 겠다!' 하지 않을것이지 않은가? </p>\n<p>이를 위해 인터넷을 뒤져보니 </p>\n<ol>\n<li>SMC (시스템 관리 컨트롤러) <code class=\"language-text\">초기화</code></li>\n<li>비정상적인 OS 접근으로 kernel_task 의 <code class=\"language-text\">자체적인 작업을 제한</code></li>\n<li>하판 오픈 (뚜따?) 이후 <code class=\"language-text\">써멀패드 부착</code></li>\n</ol>\n<p>1번의 초기화를 Apple 공식홈페이지의 안내에 따라 실행하보았지만 효과는 전혀 없었다. </br></p>\n<p>2번은 만일 차후에 무거운 작업을 돌리다 과도하게 cpu 의 온도가 치솟았을때 이를 제어해줄 kernel_task 가 없다면 고장을 야기할 수 있다.</p>\n<p>3번은 Apple 정책상 임의로 개인이 하판을 오픈하게 될경우 AS 를 받을 수 없게된다.</p>\n<p>이로인해, 나는 다른 방법을 생각해야 했으며, <br>\n단순하게 생각하면, 결국 <code class=\"language-text\">kernal_task</code> 의 과점유 현상은 즉, <code class=\"language-text\">온도</code> 와 밀접하게 관련이 있다. <br>\n온도를 잡으면 모든것이 해결되는 것 아닌가? <br>\n지금부터 내가 외장모니터 2개, 외장 키보드, 외장 마우스 를 사용하며 webstorm 으로 작업을 하는 도중에도\n발열관리를 완벽히 잡은 개인적인 경험에 대해 써보려고 한다.</p>\n<h3>나만의 진짜 해결책</h3>\n<ol>\n<li>맥북프로는 팬이 내부에서 돌아감에 따라 열이 뒤쪽 힌지부분으로 나오게 되며, <br>\n하판 자체에는 구멍이 일절 없다. 즉, 일반적인 <code class=\"language-text\">노트북용 쿨러</code> 는 저어어엉말 코딱지만한 효과밖에\n줄 수 없다. <br>\n하지만 이점을 이용하여 <code class=\"language-text\">물리적으로</code> 지우개 등을 이용하여 바닥에서 맥북을 공중으로 띄워놓는다.\n이정도만 해줘도 발열이 어느정도 잡힐 것이라고 나는 확신한다.</li>\n<li><code class=\"language-text\">Macs Fan Control</code> 이라는 프로그램을 사용하여 임의로 맥북의 팬 속도를 일정하고 강하게\n조절할 수 있다. 나는 무거운 프로그램을 돌릴때는 항상 <code class=\"language-text\">Full blast</code> 에 맞추어두고 사용한다.</li>\n<li>\n<p>물론 장점이겠지만 맥북 프로에 들어간 <code class=\"language-text\">Intel Processor</code> 는 <code class=\"language-text\">Turbo Boost</code> 기능을 가지고 있고,\n이를 자기 마음대로 적재적소에 활용한다. <br>\n주로 무거운 프로세스를 돌릴때 사용하는데 문제는 Turbo Boost 가 작동될 시점에 cpu 의 온도는 순간적이지만 기하급수적으로 상승하고,\n이는 곧 cpu 의 온도 상승으로 직결된다. 이를 방지하기 위해 <code class=\"language-text\">Turbo Boost Switcher</code> 라는 프로그램을 사용하여 꼭 필요한 경우를\n제외하고는 항상 Turbo boost mode 기능을 꺼준다. 이로인하여 작업이 느려졌다고 채감한적은 단 한번도 없었다.</p>\n<hr>\n</li>\n</ol>\n<h2>결론</h2>\n<p>정말 마음먹고 거금을 들여 산 나의 맥북이 산지 반년도 지나지 않았는데 항상 끙끙대고 힘들어 하는 모습에\n정말 몇달동안 속상함을 넘어 분노가 치밀었다. 이로인해, 나는 거의 한달동안 모든 리소스를 찾아가며 이에대한 해결책을 찾으려 노력했고,\n이 과정에서도 개발적인 지식이 아니더라도 꽤 많은 지식을 얻었다고 생각한다. 이 글을 읽고 한분이라도 어서 광명을 찾으시길 기원하며...</p>","frontmatter":{"title":"맥북 kernel_task 과점유 현상","date":"February 16, 2022","update":"February 16, 2022","tags":["Mac"],"series":null},"fields":{"slug":"/mac-kernal-task/","readingTime":{"minutes":6.94}}},"seriesList":{"edges":[{"node":{"id":"45bc678e-7703-5acd-aafd-a7c0fa93a80c","fields":{"slug":"/baekjoon-1654/"},"frontmatter":{"title":"[BOJ] 1654 랜선 자르기 (Node.js)"}}},{"node":{"id":"028e9080-86df-53bb-a1e9-dbc398328921","fields":{"slug":"/vainllajs-registration-form/"},"frontmatter":{"title":"회원가입 폼 with Vanilla JS"}}},{"node":{"id":"d736c4dd-4d23-5481-97d4-a12694b7fd0c","fields":{"slug":"/movie-seat-booking/"},"frontmatter":{"title":"영화 좌석 선택 with Vanilla JS"}}},{"node":{"id":"950ab322-20a3-506d-be98-95c57b9d5e7f","fields":{"slug":"/exchange-rate-calculator/"},"frontmatter":{"title":"환전기 with Vanilla JS"}}},{"node":{"id":"bfe47c8d-2f18-5cc3-8501-86e865256557","fields":{"slug":"/custom-video-player/"},"frontmatter":{"title":"비디오 플레이어 with Vanilla JS"}}},{"node":{"id":"4b8a65e9-78c3-54b6-8fce-8e518749024c","fields":{"slug":"/personal-information-list/"},"frontmatter":{"title":"개인자산 체크 with Vanilla JS"}}},{"node":{"id":"364ae05f-101b-5720-9ec6-d692d55e0062","fields":{"slug":"/menu-sidebar-modal/"},"frontmatter":{"title":"사이드바, 모달 with Vanilla JS"}}},{"node":{"id":"5abf51b6-6ecd-5d96-879f-5777a606bf0a","fields":{"slug":"/connecting-server-client/"},"frontmatter":{"title":"React && Node.js 연결하기"}}},{"node":{"id":"ac1bef97-c59e-5beb-955b-d8c6e8e742c8","fields":{"slug":"/import-react/"},"frontmatter":{"title":"importing React 와 JSX 사용의 상관관계"}}},{"node":{"id":"2a9c97e2-a6bc-515d-9f47-b1248cf5f9cf","fields":{"slug":"/vsc-react-autoimport/"},"frontmatter":{"title":"VSC 리액트 auto import"}}},{"node":{"id":"bf55c7ac-a772-56fa-b74d-2a0ae1afd342","fields":{"slug":"/useRef/"},"frontmatter":{"title":"리액트 useRef"}}},{"node":{"id":"376677fe-0b5d-57d7-9b3e-95aeb604a67c","fields":{"slug":"/react-debouncing/"},"frontmatter":{"title":"리액트 디바운싱(debouncing)"}}},{"node":{"id":"de4aef09-b0e7-5a98-99a2-d996af28dbff","fields":{"slug":"/react-debugging/"},"frontmatter":{"title":"리액트 크롬 데브툴 디버깅(debugging)"}}},{"node":{"id":"7ddeab05-2689-5d93-a885-948c97b1db0e","fields":{"slug":"/js-semicolon/"},"frontmatter":{"title":"자바스크립트 내에서의 세미콜론(;) 사용"}}},{"node":{"id":"63903bd1-952c-5d18-a931-a4adf22668c4","fields":{"slug":"/js-short-circuit-evaluation/"},"frontmatter":{"title":"자바스크립트 단축 평가"}}},{"node":{"id":"9ab7110e-3675-5155-a3d2-773f12f2b7fc","fields":{"slug":"/js-const/"},"frontmatter":{"title":"자바스크립트 const(constant) 키워드 에 대한 고찰"}}},{"node":{"id":"ef98c32c-b112-56b5-8750-2a65f29a76f8","fields":{"slug":"/js-single-thread/"},"frontmatter":{"title":"싱글스레드인 자바스크립트는 어떻게 비동기 처리를 하는가"}}},{"node":{"id":"50d11bc0-654a-525a-9cd5-220a2335dfc6","fields":{"slug":"/js-indexOf/"},"frontmatter":{"title":"자바스크립트 indexOf() 와 시간 복잡도의 상관관계에 대한 고찰"}}},{"node":{"id":"e83d28ae-8193-56f4-9504-165a7670ea8c","fields":{"slug":"/2021-retrospect/"},"frontmatter":{"title":"2021년 블로그 운영 회고"}}},{"node":{"id":"2f3f5cd2-f838-50db-9e87-f864a0082032","fields":{"slug":"/react-real-code-splitting/"},"frontmatter":{"title":"리액트 Code-splitting 실적용 사례"}}},{"node":{"id":"3653cebd-84f0-5d9f-b911-7e3380e26d2f","fields":{"slug":"/mac-kernal-task/"},"frontmatter":{"title":"맥북 kernel_task 과점유 현상"}}},{"node":{"id":"ac8423e7-cc42-5cf5-8f71-2d94b816c3cc","fields":{"slug":"/js-async-defer/"},"frontmatter":{"title":"자바스크립트 script 태그 async & defer 속성"}}},{"node":{"id":"7500a096-2419-500f-9c14-f6faa8a8b733","fields":{"slug":"/js-reduce-break/"},"frontmatter":{"title":"자바스크립트 reduce break"}}},{"node":{"id":"862d4423-5868-5d5d-ae40-0996bf878f09","fields":{"slug":"/js-linked-list/"},"frontmatter":{"title":"Linked-list with JS"}}},{"node":{"id":"ce965688-bfc1-5d9e-9fa2-87faec37db48","fields":{"slug":"/js-stack/"},"frontmatter":{"title":"Stack with JS"}}},{"node":{"id":"3fb03326-51d0-5ea4-8f03-157013d29817","fields":{"slug":"/js-queue/"},"frontmatter":{"title":"Queue with JS"}}},{"node":{"id":"2de45d5f-9115-5e85-a7a4-199ed24049b7","fields":{"slug":"/react-4-anti-patterns/"},"frontmatter":{"title":"리액트에서 피해야할 안티패턴"}}},{"node":{"id":"0df70305-6854-532e-b7ed-bf1afa0a0f3b","fields":{"slug":"/js-array-element-swap/"},"frontmatter":{"title":"자바스크립트 배열 원소 swap"}}},{"node":{"id":"7c241801-fc74-5e9f-ad4d-0857819cdd2a","fields":{"slug":"/js-primitive-reference-types/"},"frontmatter":{"title":"자바스크립트 원시(primitive)타입 vs 참조(reference)타입"}}},{"node":{"id":"e3b5900a-32b4-5091-8025-7ca64a558e5a","fields":{"slug":"/sellon/"},"frontmatter":{"title":"멋쟁이사자처럼 10기 해커톤 이후 회고"}}}]},"previous":{"fields":{"slug":"/react-real-code-splitting/"},"frontmatter":{"title":"리액트 Code-splitting 실적용 사례"}},"next":{"fields":{"slug":"/js-async-defer/"},"frontmatter":{"title":"자바스크립트 script 태그 async & defer 속성"}}},"pageContext":{"id":"3653cebd-84f0-5d9f-b911-7e3380e26d2f","series":null,"previousPostId":"2f3f5cd2-f838-50db-9e87-f864a0082032","nextPostId":"ac8423e7-cc42-5cf5-8f71-2d94b816c3cc"}},"staticQueryHashes":[]}