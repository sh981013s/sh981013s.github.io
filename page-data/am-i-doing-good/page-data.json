{"componentChunkName":"component---src-templates-post-jsx","path":"/am-i-doing-good/","result":{"data":{"site":{"siteMetadata":{"title":"Jason Lee"}},"markdownRemark":{"id":"c8c5c807-030d-5002-9827-ae80fe4a4c42","excerpt":"비전공자로서 혼자 개발자가 되고자 학습을 하던 당시, 나를 가장 괴롭히는 의문은 내가 올바른 방향과 속도로 성장하고 있는가였다.\n이 의문은 우테코에 와서도 변함없이 지속되는 의문이다. 학습을 할수록 내가 무엇을 배웠는지, 얼마나 성장했는지를 확인할 수 있는 방법이 필요했다.\n그래서 자신에게 매일 밤 질문을 던지기 시작했다. \"오늘, 정말로 만족할만한 하루…","html":"<p>비전공자로서 혼자 개발자가 되고자 학습을 하던 당시, 나를 가장 괴롭히는 의문은 내가 올바른 방향과 속도로 성장하고 있는가였다.\n이 의문은 우테코에 와서도 변함없이 지속되는 의문이다. 학습을 할수록 내가 무엇을 배웠는지, 얼마나 성장했는지를 확인할 수 있는 방법이 필요했다.\n그래서 자신에게 매일 밤 질문을 던지기 시작했다. \"오늘, 정말로 만족할만한 하루였는가?\" 이 프로세스는 매일 밤 자기 성찰의 시간을 주었고, 성장을 돕는 중요한 순간이 되었다.</p>\n<h2>자기성찰 체크리스트</h2>\n<p>어김없이 밤이 찾아오면 자신에게 묻는다. \"오늘, 내가 정말로 잘했는가?\" 이런 자기 성찰의 시간이 바로 나의 하루를 정리하고, 내일을 위한 계획을 세우는 중요한 순간이다. 아래는 내가 매일 밤 자기 전에 체크하는 목록과 그 과정이다.\n첫 번째로, 정말로 나에게 최선을 다했는지 묻는다. 세계적인 축구 스타인 웨인 루니는 경기가 끝난 후 조금이라도 뛸 체력이 남아있는 자신을 보면 정말 한심하기 짝이 없었다고 말했다.\n나는 항상 내가 최선을 다했는지를 의식적으로 확인한다. 물론 이를 평가하기 위한 절대적인 수치는 없다. 다만, 가슴에 손을 얹고 생각했을 때 부끄러움 한점 없이 노력했는가를 확인하며 자기 반성을 한다.\n이를 통해 나는 내가 더 노력해야 할 부분을 찾고, 내일을 위한 계획을 세울 수 있다.</p>\n<p>두 번째로, 오늘 깨닫거나 학습한 개념을 복습하는 시간이다. 이 과정에서는 단순히 오늘 배운 내용을 되새김질하는 것뿐만 아니라, 그것을 어떻게 내 것으로 만들 것인지에 대한 계획을 세운다. 캠퍼스에서 개발을 하다\n궁금했거나 새로 학습한 내용을 메모장에 키워드만 적어두고, 집에 와서 키워드를 바탕으로 검색하고, 이해하고, 실제로 코드를 작동해보는 과정을 거친다. 이를 통해 나는 배운 내용을 보다 깊이 이해하고, 실제로 사용할 수 있도록 한다.</p>\n<p>세 번째로, 내가 작성한 코드에 대한 리뷰를 한다. 이 과정에서는 코드의 효율성, 가독성, 그리고 구조 등을 고려하며, 문제가 있다면 어떻게 개선할 수 있을지를 생각한다. 그리고 가상으로 타인이 있다 생각하고\n각 선택에 대한 근거를 설명하려 한다. 근거가 부족하다면, 보완하기 위해 추가적인 학습을 진행한다. 이를 통해 내 코드에 대한 이해도를 높이고, 다음날 어떤 부분에 집중하여 코드를 짤 수 있을지 청사진을 그릴 수 있다.</p>\n<p>마지막으로, 간략하게나마 내일의 계획을 세운다. 나는 남들과의 비교는 관심이 없는 편이다. 늘 내일의 나 자신이 오늘보다 더 나아질 수 있도록 계획하고 그것을 실행에 옮기기 위해 노력한다. 어떻게 내일 하루라는 시간을 활용하여\n폭발적으로 성장할 수 있는 방법이 없을까 고민한다. 이를 위해 내일의 학습 목표를 설정하고, 어떤 주제를 학습할 것인지, 어떤 코드에 집중할 것인지 등을 결정한다.</p>\n<p>위와같이, 나는 매일 밤 내 자신에게 질문하며, 정말로 잘 하고 있는지를 점검한다. 이는 나에게 자기 성찰의 시간을 주며, 나의 성장을 돕는다.\n그래서 나는 매일 밤 이 시간을 정성껏 준비하고 통과한다. 이를 통해 나는 내가 정말로 잘하고 있는지를 체크하고, 내일을 위한 계획을 세울 수 있다.</p>","frontmatter":{"title":"나는 올바르게 성장하고 있는가","date":"May 10, 2023","update":"May 10, 2022","tags":["회고"],"series":null},"fields":{"slug":"/am-i-doing-good/","readingTime":{"minutes":5.425}}},"seriesList":{"edges":[{"node":{"id":"45bc678e-7703-5acd-aafd-a7c0fa93a80c","fields":{"slug":"/baekjoon-1654/"},"frontmatter":{"title":"[BOJ] 1654 랜선 자르기 (Node.js)"}}},{"node":{"id":"028e9080-86df-53bb-a1e9-dbc398328921","fields":{"slug":"/vainllajs-registration-form/"},"frontmatter":{"title":"회원가입 폼 with Vanilla JS"}}},{"node":{"id":"d736c4dd-4d23-5481-97d4-a12694b7fd0c","fields":{"slug":"/movie-seat-booking/"},"frontmatter":{"title":"영화 좌석 선택 with Vanilla JS"}}},{"node":{"id":"950ab322-20a3-506d-be98-95c57b9d5e7f","fields":{"slug":"/exchange-rate-calculator/"},"frontmatter":{"title":"환전기 with Vanilla JS"}}},{"node":{"id":"bfe47c8d-2f18-5cc3-8501-86e865256557","fields":{"slug":"/custom-video-player/"},"frontmatter":{"title":"비디오 플레이어 with Vanilla JS"}}},{"node":{"id":"4b8a65e9-78c3-54b6-8fce-8e518749024c","fields":{"slug":"/personal-information-list/"},"frontmatter":{"title":"개인자산 체크 with Vanilla JS"}}},{"node":{"id":"364ae05f-101b-5720-9ec6-d692d55e0062","fields":{"slug":"/menu-sidebar-modal/"},"frontmatter":{"title":"사이드바, 모달 with Vanilla JS"}}},{"node":{"id":"5abf51b6-6ecd-5d96-879f-5777a606bf0a","fields":{"slug":"/connecting-server-client/"},"frontmatter":{"title":"React && Node.js 연결하기"}}},{"node":{"id":"ac1bef97-c59e-5beb-955b-d8c6e8e742c8","fields":{"slug":"/import-react/"},"frontmatter":{"title":"importing React 와 JSX 사용의 상관관계"}}},{"node":{"id":"2a9c97e2-a6bc-515d-9f47-b1248cf5f9cf","fields":{"slug":"/vsc-react-autoimport/"},"frontmatter":{"title":"VSC 리액트 auto import"}}},{"node":{"id":"bf55c7ac-a772-56fa-b74d-2a0ae1afd342","fields":{"slug":"/useRef/"},"frontmatter":{"title":"리액트 useRef"}}},{"node":{"id":"376677fe-0b5d-57d7-9b3e-95aeb604a67c","fields":{"slug":"/react-debouncing/"},"frontmatter":{"title":"리액트 디바운싱(debouncing)"}}},{"node":{"id":"de4aef09-b0e7-5a98-99a2-d996af28dbff","fields":{"slug":"/react-debugging/"},"frontmatter":{"title":"리액트 크롬 데브툴 디버깅(debugging)"}}},{"node":{"id":"7ddeab05-2689-5d93-a885-948c97b1db0e","fields":{"slug":"/js-semicolon/"},"frontmatter":{"title":"자바스크립트 내에서의 세미콜론(;) 사용"}}},{"node":{"id":"63903bd1-952c-5d18-a931-a4adf22668c4","fields":{"slug":"/js-short-circuit-evaluation/"},"frontmatter":{"title":"자바스크립트 단축 평가"}}},{"node":{"id":"9ab7110e-3675-5155-a3d2-773f12f2b7fc","fields":{"slug":"/js-const/"},"frontmatter":{"title":"자바스크립트 const(constant) 키워드 에 대한 고찰"}}},{"node":{"id":"ef98c32c-b112-56b5-8750-2a65f29a76f8","fields":{"slug":"/js-single-thread/"},"frontmatter":{"title":"싱글스레드인 자바스크립트는 어떻게 비동기 처리를 하는가"}}},{"node":{"id":"50d11bc0-654a-525a-9cd5-220a2335dfc6","fields":{"slug":"/js-indexOf/"},"frontmatter":{"title":"자바스크립트 indexOf() 와 시간 복잡도의 상관관계에 대한 고찰"}}},{"node":{"id":"e83d28ae-8193-56f4-9504-165a7670ea8c","fields":{"slug":"/2021-retrospect/"},"frontmatter":{"title":"2021년 블로그 운영 회고"}}},{"node":{"id":"2f3f5cd2-f838-50db-9e87-f864a0082032","fields":{"slug":"/react-real-code-splitting/"},"frontmatter":{"title":"리액트 Code-splitting 실적용 사례"}}},{"node":{"id":"3653cebd-84f0-5d9f-b911-7e3380e26d2f","fields":{"slug":"/mac-kernal-task/"},"frontmatter":{"title":"맥북 kernel_task 과점유 현상"}}},{"node":{"id":"ac8423e7-cc42-5cf5-8f71-2d94b816c3cc","fields":{"slug":"/js-async-defer/"},"frontmatter":{"title":"자바스크립트 script 태그 async & defer 속성"}}},{"node":{"id":"7500a096-2419-500f-9c14-f6faa8a8b733","fields":{"slug":"/js-reduce-break/"},"frontmatter":{"title":"자바스크립트 reduce break"}}},{"node":{"id":"862d4423-5868-5d5d-ae40-0996bf878f09","fields":{"slug":"/js-linked-list/"},"frontmatter":{"title":"Linked-list with JS"}}},{"node":{"id":"ce965688-bfc1-5d9e-9fa2-87faec37db48","fields":{"slug":"/js-stack/"},"frontmatter":{"title":"Stack with JS"}}},{"node":{"id":"3fb03326-51d0-5ea4-8f03-157013d29817","fields":{"slug":"/js-queue/"},"frontmatter":{"title":"Queue with JS"}}},{"node":{"id":"2de45d5f-9115-5e85-a7a4-199ed24049b7","fields":{"slug":"/react-4-anti-patterns/"},"frontmatter":{"title":"리액트에서 피해야할 안티패턴"}}},{"node":{"id":"0df70305-6854-532e-b7ed-bf1afa0a0f3b","fields":{"slug":"/js-array-element-swap/"},"frontmatter":{"title":"자바스크립트 배열 원소 swap"}}},{"node":{"id":"7c241801-fc74-5e9f-ad4d-0857819cdd2a","fields":{"slug":"/js-primitive-reference-types/"},"frontmatter":{"title":"자바스크립트 원시(primitive)타입 vs 참조(reference)타입"}}},{"node":{"id":"e3b5900a-32b4-5091-8025-7ca64a558e5a","fields":{"slug":"/sellon/"},"frontmatter":{"title":"멋쟁이사자처럼 10기 해커톤 이후 회고"}}},{"node":{"id":"6e309f62-7717-5898-b10d-ed350c7a5e9b","fields":{"slug":"/oohtech-success/"},"frontmatter":{"title":"우아한 테크코스 5기 프론트엔드 최종합격 후기 및 과정"}}},{"node":{"id":"46073002-10b1-599c-8d84-99d4ebb7cb78","fields":{"slug":"/js-global-state-management-vanilla-js/"},"frontmatter":{"title":"Vanilla JS 로 간단한 전역 상태 관리 시스템 만들기"}}},{"node":{"id":"5dae62fe-064f-5acf-8114-7e5f4d22a1e3","fields":{"slug":"/ts-non-null-assertion-operator/"},"frontmatter":{"title":"[Typescript] Non-null assertion operator ! (non-null 단언 연산자)"}}},{"node":{"id":"47305df1-1dc7-5b3c-b334-dcc9922f4cd6","fields":{"slug":"/woowacourse-first-month/"},"frontmatter":{"title":"🦉 부엉이의 함께 자라기 in 우테코"}}},{"node":{"id":"adcfbb9c-c845-5d03-be55-8fddde63ce29","fields":{"slug":"/js-wrapping-object/"},"frontmatter":{"title":"[JavaScript] 자바스크립트의 객체 wrapper에 대해 알아보자"}}},{"node":{"id":"9354e08d-30df-548f-a9df-b62ce6e5616c","fields":{"slug":"/woowacourse-level-one/"},"frontmatter":{"title":"우테코 레벨1 회고"}}},{"node":{"id":"c8c5c807-030d-5002-9827-ae80fe4a4c42","fields":{"slug":"/am-i-doing-good/"},"frontmatter":{"title":"나는 올바르게 성장하고 있는가"}}}]},"previous":{"fields":{"slug":"/woowacourse-level-one/"},"frontmatter":{"title":"우테코 레벨1 회고"}},"next":null},"pageContext":{"id":"c8c5c807-030d-5002-9827-ae80fe4a4c42","series":null,"previousPostId":"9354e08d-30df-548f-a9df-b62ce6e5616c","nextPostId":null}},"staticQueryHashes":[]}