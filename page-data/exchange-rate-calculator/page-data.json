{"componentChunkName":"component---src-templates-post-jsx","path":"/exchange-rate-calculator/","result":{"data":{"site":{"siteMetadata":{"title":"hwani.dev"}},"markdownRemark":{"id":"950ab322-20a3-506d-be98-95c57b9d5e7f","excerpt":"Intro 4번째 Mini Vanilla Js Project 이다. 이번에는  라는  를 사용하여 환전 기능을 만들어보았다! Main 소스코드 liveDemo  Conclusion 처음으로 vanillaJS 를 사용하며, third-party api 를 사용해보았다. 기존에 리액트를 배우고 사용했을때는 데이터를 요청하는 방식 자체에 대해서 당연하게 고민도…","html":"<h2>Intro</h2>\n<p>4번째 Mini Vanilla Js Project 이다.</p>\n<p>이번에는 <code class=\"language-text\">ExchangeRate-API</code> 라는 <code class=\"language-text\">Third-party api</code> 를 사용하여 환전 기능을 만들어보았다!</p>\n<hr>\n<h2>Main</h2>\n<ul>\n<li><a href=\"https://github.com/sh981013s/Projects-with-VanillaJs/tree/main/Exchange-Rate-Calculator\">소스코드</a></li>\n<li><a href=\"https://hwani-vanillajs.netlify.app/exchange-rate-calculator/\">liveDemo</a></li>\n</ul>\n<p><img src=\"/static/exchange-cal-71ae4e4d8be5a0e4ebbdda555a79d8eb.gif\"></p>\n<hr>\n<h2>Conclusion</h2>\n<p>처음으로 vanillaJS 를 사용하며, third-party api 를 사용해보았다.</p>\n<p>기존에 리액트를 배우고 사용했을때는 데이터를 요청하는 방식 자체에 대해서 당연하게 고민도 하지 않은채 마구잡이로 남들이 사용하는 방식대로 <code class=\"language-text\">request</code> 나 <code class=\"language-text\">axios</code> 를 썼었는데,</p>\n<p>이번 프로젝트를 진행하며, 브라우저가 자체적으로 <code class=\"language-text\">fetch()</code> 함수를 지원한다는 것을 배웠고, 이를 사용해보았다. 결과는 내 기준에서는 성공적이였고, 고민을 해보았던 점은, 결국 <code class=\"language-text\">request</code>, <code class=\"language-text\">axios</code> 도 같은 <code class=\"language-text\">Http 비동기 통신 library</code> 일텐데</p>\n<p>이들을 대체할 수 있는 내장 함수인 <code class=\"language-text\">fetch()</code> 를 main 으로 사용한다면 <code class=\"language-text\">js bundling size</code> 면에서 유리하지 않을까 였다.</p>\n<p>이 문제에 대해 찾아본 결과, 내 생각대로라면 <code class=\"language-text\">fetch()</code> 를 main 으로 쓰는것이 바람직 할 수 있겠지만, </p>\n<ul>\n<li>지원하지 않는 브라우저가 있다  (...IE11)</li>\n<li>네트워크 에러 발생 시 response timeout 없이 기다려야한다.</li>\n<li>JSON 으로 변환해주는 과정이 필요하다.</li>\n</ul>\n<p>위 세가지의 단점때문에 아직 외부 라이브러리들을 사용을 한다는 의견이 많고,  나의 실력으로써는 더 많이 경험하고 써보면서 각자의 장단점을 몸소 직접 체험하는 수밖에 없을 것 같다.</p>","frontmatter":{"title":"환전기 with Vanilla JS","date":"November 27, 2021","update":"November 27, 2021","tags":["VanillaJS"],"series":null},"fields":{"slug":"/exchange-rate-calculator/","readingTime":{"minutes":2.095}}},"seriesList":{"edges":[{"node":{"id":"45bc678e-7703-5acd-aafd-a7c0fa93a80c","fields":{"slug":"/baekjoon-1654/"},"frontmatter":{"title":"[BOJ] 1654 랜선 자르기 (Node.js)"}}},{"node":{"id":"028e9080-86df-53bb-a1e9-dbc398328921","fields":{"slug":"/vainllajs-registration-form/"},"frontmatter":{"title":"회원가입 폼 with Vanilla JS"}}},{"node":{"id":"d736c4dd-4d23-5481-97d4-a12694b7fd0c","fields":{"slug":"/movie-seat-booking/"},"frontmatter":{"title":"영화 좌석 선택 with Vanilla JS"}}},{"node":{"id":"950ab322-20a3-506d-be98-95c57b9d5e7f","fields":{"slug":"/exchange-rate-calculator/"},"frontmatter":{"title":"환전기 with Vanilla JS"}}},{"node":{"id":"bfe47c8d-2f18-5cc3-8501-86e865256557","fields":{"slug":"/custom-video-player/"},"frontmatter":{"title":"비디오 플레이어 with Vanilla JS"}}},{"node":{"id":"4b8a65e9-78c3-54b6-8fce-8e518749024c","fields":{"slug":"/personal-information-list/"},"frontmatter":{"title":"개인자산 체크 with Vanilla JS"}}},{"node":{"id":"364ae05f-101b-5720-9ec6-d692d55e0062","fields":{"slug":"/menu-sidebar-modal/"},"frontmatter":{"title":"사이드바, 모달 with Vanilla JS"}}},{"node":{"id":"5abf51b6-6ecd-5d96-879f-5777a606bf0a","fields":{"slug":"/connecting-server-client/"},"frontmatter":{"title":"React && Node.js 연결하기"}}},{"node":{"id":"ac1bef97-c59e-5beb-955b-d8c6e8e742c8","fields":{"slug":"/import-react/"},"frontmatter":{"title":"importing React 와 JSX 사용의 상관관계"}}},{"node":{"id":"2a9c97e2-a6bc-515d-9f47-b1248cf5f9cf","fields":{"slug":"/vsc-react-autoimport/"},"frontmatter":{"title":"VSC 리액트 auto import"}}},{"node":{"id":"bf55c7ac-a772-56fa-b74d-2a0ae1afd342","fields":{"slug":"/useRef/"},"frontmatter":{"title":"리액트 useRef"}}},{"node":{"id":"376677fe-0b5d-57d7-9b3e-95aeb604a67c","fields":{"slug":"/react-debouncing/"},"frontmatter":{"title":"리액트 디바운싱(debouncing)"}}},{"node":{"id":"de4aef09-b0e7-5a98-99a2-d996af28dbff","fields":{"slug":"/react-debugging/"},"frontmatter":{"title":"리액트 크롬 데브툴 디버깅(debugging)"}}},{"node":{"id":"7ddeab05-2689-5d93-a885-948c97b1db0e","fields":{"slug":"/js-semicolon/"},"frontmatter":{"title":"자바스크립트 내에서의 세미콜론(;) 사용"}}},{"node":{"id":"63903bd1-952c-5d18-a931-a4adf22668c4","fields":{"slug":"/js-short-circuit-evaluation/"},"frontmatter":{"title":"자바스크립트 단축 평가"}}},{"node":{"id":"9ab7110e-3675-5155-a3d2-773f12f2b7fc","fields":{"slug":"/js-const/"},"frontmatter":{"title":"자바스크립트 const(constant) 키워드 에 대한 고찰"}}},{"node":{"id":"ef98c32c-b112-56b5-8750-2a65f29a76f8","fields":{"slug":"/js-single-thread/"},"frontmatter":{"title":"싱글스레드인 자바스크립트는 어떻게 비동기 처리를 하는가"}}},{"node":{"id":"50d11bc0-654a-525a-9cd5-220a2335dfc6","fields":{"slug":"/js-indexOf/"},"frontmatter":{"title":"자바스크립트 indexOf() 와 시간 복잡도의 상관관계에 대한 고찰"}}},{"node":{"id":"e83d28ae-8193-56f4-9504-165a7670ea8c","fields":{"slug":"/2021-retrospect/"},"frontmatter":{"title":"2021년 블로그 운영 회고"}}},{"node":{"id":"2f3f5cd2-f838-50db-9e87-f864a0082032","fields":{"slug":"/react-real-code-splitting/"},"frontmatter":{"title":"리액트 Code-splitting 실적용 사례"}}},{"node":{"id":"3653cebd-84f0-5d9f-b911-7e3380e26d2f","fields":{"slug":"/mac-kernal-task/"},"frontmatter":{"title":"맥북 kernel_task 과점유 현상"}}},{"node":{"id":"ac8423e7-cc42-5cf5-8f71-2d94b816c3cc","fields":{"slug":"/js-async-defer/"},"frontmatter":{"title":"자바스크립트 script 태그 async & defer 속성"}}},{"node":{"id":"7500a096-2419-500f-9c14-f6faa8a8b733","fields":{"slug":"/js-reduce-break/"},"frontmatter":{"title":"자바스크립트 reduce break"}}},{"node":{"id":"862d4423-5868-5d5d-ae40-0996bf878f09","fields":{"slug":"/js-linked-list/"},"frontmatter":{"title":"Linked-list with JS"}}},{"node":{"id":"ce965688-bfc1-5d9e-9fa2-87faec37db48","fields":{"slug":"/js-stack/"},"frontmatter":{"title":"Stack with JS"}}},{"node":{"id":"3fb03326-51d0-5ea4-8f03-157013d29817","fields":{"slug":"/js-queue/"},"frontmatter":{"title":"Queue with JS"}}},{"node":{"id":"2de45d5f-9115-5e85-a7a4-199ed24049b7","fields":{"slug":"/react-4-anti-patterns/"},"frontmatter":{"title":"리액트에서 피해야할 안티패턴"}}},{"node":{"id":"0df70305-6854-532e-b7ed-bf1afa0a0f3b","fields":{"slug":"/js-array-element-swap/"},"frontmatter":{"title":"자바스크립트 배열 원소 swap"}}},{"node":{"id":"7c241801-fc74-5e9f-ad4d-0857819cdd2a","fields":{"slug":"/js-primitive-reference-types/"},"frontmatter":{"title":"자바스크립트 원시(primitive)타입 vs 참조(reference)타입"}}},{"node":{"id":"e3b5900a-32b4-5091-8025-7ca64a558e5a","fields":{"slug":"/sellon/"},"frontmatter":{"title":"멋쟁이사자처럼 10기 해커톤 이후 회고"}}},{"node":{"id":"6e309f62-7717-5898-b10d-ed350c7a5e9b","fields":{"slug":"/oohtech-success/"},"frontmatter":{"title":"우아한 테크코스 5기 프론트엔드 최종합격 후기 및 과정"}}},{"node":{"id":"46073002-10b1-599c-8d84-99d4ebb7cb78","fields":{"slug":"/js-global-state-management-vanilla-js/"},"frontmatter":{"title":"Vanilla JS 로 간단한 전역 상태 관리 시스템 만들기"}}},{"node":{"id":"5dae62fe-064f-5acf-8114-7e5f4d22a1e3","fields":{"slug":"/ts-non-null-assertion-operator/"},"frontmatter":{"title":"[Typescript] Non-null assertion operator ! (non-null 단언 연산자)"}}},{"node":{"id":"47305df1-1dc7-5b3c-b334-dcc9922f4cd6","fields":{"slug":"/woowacourse-first-month/"},"frontmatter":{"title":"🦉 부엉이의 함께 자라기 in 우테코"}}}]},"previous":{"fields":{"slug":"/movie-seat-booking/"},"frontmatter":{"title":"영화 좌석 선택 with Vanilla JS"}},"next":{"fields":{"slug":"/custom-video-player/"},"frontmatter":{"title":"비디오 플레이어 with Vanilla JS"}}},"pageContext":{"id":"950ab322-20a3-506d-be98-95c57b9d5e7f","series":null,"previousPostId":"d736c4dd-4d23-5481-97d4-a12694b7fd0c","nextPostId":"bfe47c8d-2f18-5cc3-8501-86e865256557"}},"staticQueryHashes":[]}