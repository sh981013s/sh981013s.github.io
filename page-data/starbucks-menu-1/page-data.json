{"componentChunkName":"component---src-templates-post-jsx","path":"/starbucks-menu-1/","result":{"data":{"site":{"siteMetadata":{"title":"hwani.dev"}},"markdownRemark":{"id":"a3e16011-856b-598c-88ca-ceebc8364f95","excerpt":"결과물 미리보기  CheckLists 메뉴에 새로운 메뉴를 확인 버튼 또는 엔터키 입력으로 추가한다. 메뉴가 추가되고 나면, input은 빈 값으로 초기화한다. 사용자 입력값이 빈 값이라면 추가되지 않는다. 메뉴의 수정 버튼을 눌러 메뉴 이름 수정할 수 있다. 메뉴 수정시 브라우저에서 제공하는  인터페이스를 활용한다. 메뉴 삭제 버튼을 이용하여 메뉴 삭제…","html":"<h2>결과물 미리보기</h2>\n<p><img src=\"/static/123-aef01429119f9934401c29e13c7507a9.gif\"></p>\n<h2>CheckLists</h2>\n<ul>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" checked disabled> 메뉴에 새로운 메뉴를 확인 버튼 또는 엔터키 입력으로 추가한다.</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 메뉴가 추가되고 나면, input은 빈 값으로 초기화한다.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 사용자 입력값이 빈 값이라면 추가되지 않는다.</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" checked disabled> 메뉴의 수정 버튼을 눌러 메뉴 이름 수정할 수 있다.</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 메뉴 수정시 브라우저에서 제공하는 <code class=\"language-text\">prompt</code> 인터페이스를 활용한다.</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" checked disabled> 메뉴 삭제 버튼을 이용하여 메뉴 삭제할 수 있다.</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 메뉴 삭제시 브라우저에서 제공하는 <code class=\"language-text\">confirm</code> 인터페이스를 활용한다.</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 총 메뉴 갯수를 count하여 상단에 보여준다.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> <a href=\"https://developer.mozilla.org/ko/docs/Web/API/Window/localStorage\">localStorage</a>에 데이터를 저장하여 새로고침해도 데이터가 남아있게 한다.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 지점별로 메뉴판을 관리할 수 있게 만든다.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 페이지에 최초로 접근할 때는 국민대 지점 메뉴가 먼저 보이게 한다.</li>\n</ul>\n<hr>\n<h2>왜 했는가?</h2>\n<p>리액트를 공부하며 상태관리에 대해 생각하던 중, 문득 궁금함이 생겼다.</p>\n<p>동적인 <code class=\"language-text\">web application</code> 을 만들기 위해 리액트를 공부중 이지만,</p>\n<p>결국 리액트도 <code class=\"language-text\">javascript library</code> 일뿐일텐데,</p>\n<p>이를 vanilla JS 로 내가 비슷하게라도 흉내내어 리액트 없이 <code class=\"language-text\">동적으로 state 관리</code>란 불가능한것일까..?</p>\n<p>찾아보니, <code class=\"language-text\">localStorage</code> 라는 개념이 존재했고, 이를 사용하여 state 관리를 해보았다.</p>\n<hr>\n<h2>후기</h2>\n<p>결국 구현한건 기본적인 CRUD 일뿐이지만, vanillaJS 를 통해서도 최대한 리액트에서 활용하고 작동하는 방식과</p>\n<p>유사하게 만들어 보려고 노력했었다. 🔥</p>\n<hr>\n<h2>데모링크</h2>\n<p align=\"middle\">\n  <a href=\"https://optimistic-blackwell-8e5882.netlify.app\" target=\"_blank\">🖥️ 데모 링크</a>\n</p>","frontmatter":{"title":"스타벅스 메뉴관리 with vanilla JS","date":"November 21, 2021","update":"November 21, 2021","tags":["Vanilla JS"],"series":null},"fields":{"slug":"/starbucks-menu-1/","readingTime":{"minutes":2.365}}},"seriesList":{"edges":[{"node":{"id":"a3e16011-856b-598c-88ca-ceebc8364f95","fields":{"slug":"/starbucks-menu-1/"},"frontmatter":{"title":"스타벅스 메뉴관리 with vanilla JS"}}}]},"previous":{"fields":{"slug":"/no-global/"},"frontmatter":{"title":"전역 공간 사용 최소화"}},"next":null},"pageContext":{"id":"a3e16011-856b-598c-88ca-ceebc8364f95","series":null,"previousPostId":"ec9410bb-52dd-553a-b26b-7a01b389e775","nextPostId":null}},"staticQueryHashes":[]}