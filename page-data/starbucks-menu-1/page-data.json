{"componentChunkName":"component---src-templates-post-jsx","path":"/starbucks-menu-1/","result":{"data":{"site":{"siteMetadata":{"title":"hwani.dev"}},"markdownRemark":{"id":"08c6f9af-0167-54a0-9af6-45bab9619823","excerpt":"결과물 미리보기  CheckLists 메뉴에 새로운 메뉴를 확인 버튼 또는 엔터키 입력으로 추가한다. 메뉴가 추가되고 나면, input은 빈 값으로 초기화한다. 사용자 입력값이 빈 값이라면 추가되지 않는다. 메뉴의 수정 버튼을 눌러 메뉴 이름 수정할 수 있다. 메뉴 수정시 브라우저에서 제공하는  인터페이스를 활용한다. 메뉴 삭제 버튼을 이용하여 메뉴 삭제…","html":"<h2>결과물 미리보기</h2>\n<p><img src=\"123.gif\"></p>\n<h2>CheckLists</h2>\n<ul>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" checked disabled> 메뉴에 새로운 메뉴를 확인 버튼 또는 엔터키 입력으로 추가한다.</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 메뉴가 추가되고 나면, input은 빈 값으로 초기화한다.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 사용자 입력값이 빈 값이라면 추가되지 않는다.</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" checked disabled> 메뉴의 수정 버튼을 눌러 메뉴 이름 수정할 수 있다.</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 메뉴 수정시 브라우저에서 제공하는 <code class=\"language-text\">prompt</code> 인터페이스를 활용한다.</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" checked disabled> 메뉴 삭제 버튼을 이용하여 메뉴 삭제할 수 있다.</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 메뉴 삭제시 브라우저에서 제공하는 <code class=\"language-text\">confirm</code> 인터페이스를 활용한다.</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 총 메뉴 갯수를 count하여 상단에 보여준다.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> <a href=\"https://developer.mozilla.org/ko/docs/Web/API/Window/localStorage\">localStorage</a>에 데이터를 저장하여 새로고침해도 데이터가 남아있게 한다.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 지점별로 메뉴판을 관리할 수 있게 만든다.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 페이지에 최초로 접근할 때는 국민대 지점 메뉴가 먼저 보이게 한다.</li>\n</ul>\n<hr>\n<h2>왜 했는가?</h2>\n<p>리액트를 공부하며 상태관리에 대해 생각하던 중, 문득 궁금함이 생겼다.</p>\n<p>동적인 <code class=\"language-text\">web application</code> 을 만들기 위해 리액트를 공부중 이지만,</p>\n<p>결국 리액트도 <code class=\"language-text\">javascript library</code> 일뿐일텐데,</p>\n<p>이를 vanilla JS 로 내가 비슷하게라도 흉내내어 리액트 없이 <code class=\"language-text\">동적으로 state 관리</code>란 불가능한것일까..?</p>\n<p>찾아보니, <code class=\"language-text\">localStorage</code> 라는 개념이 존재했고, 이를 사용하여 state 관리를 해보았다.</p>\n<hr>\n<h2>후기</h2>\n<p>결국 구현한건 기본적인 CRUD 일뿐이지만, vanillaJS 를 통해서도 최대한 리액트에서 활용하고 작동하는 방식과</p>\n<p>유사하게 만들어 보려고 노력했었다. 🔥</p>\n<hr>\n<h2>데모링크</h2>\n<p align=\"middle\">\n  <a href=\"https://optimistic-blackwell-8e5882.netlify.app\" target=\"_blank\">🖥️ 데모 링크</a>\n</p>","frontmatter":{"title":"스타벅스 메뉴관리 with vanilla JS","date":"November 21, 2021","update":"November 21, 2021","tags":["VanillaJS"],"series":null},"fields":{"slug":"/starbucks-menu-1/","readingTime":{"minutes":2.365}}},"seriesList":{"edges":[{"node":{"id":"08c6f9af-0167-54a0-9af6-45bab9619823","fields":{"slug":"/starbucks-menu-1/"},"frontmatter":{"title":"스타벅스 메뉴관리 with vanilla JS"}}},{"node":{"id":"45bc678e-7703-5acd-aafd-a7c0fa93a80c","fields":{"slug":"/baekjoon-1654/"},"frontmatter":{"title":"[BOJ] 1654 랜선 자르기 (Node.js)"}}},{"node":{"id":"028e9080-86df-53bb-a1e9-dbc398328921","fields":{"slug":"/vainllajs-registration-form/"},"frontmatter":{"title":"회원가입 폼 with Vanilla JS"}}},{"node":{"id":"d736c4dd-4d23-5481-97d4-a12694b7fd0c","fields":{"slug":"/movie-seat-booking/"},"frontmatter":{"title":"영화 좌석 선택 with Vanilla JS"}}},{"node":{"id":"950ab322-20a3-506d-be98-95c57b9d5e7f","fields":{"slug":"/exchange-rate-calculator/"},"frontmatter":{"title":"환전기 with Vanilla JS"}}},{"node":{"id":"bfe47c8d-2f18-5cc3-8501-86e865256557","fields":{"slug":"/custom-video-player/"},"frontmatter":{"title":"비디오 플레이어 with Vanilla JS"}}},{"node":{"id":"4b8a65e9-78c3-54b6-8fce-8e518749024c","fields":{"slug":"/personal-information-list/"},"frontmatter":{"title":"개인자산 체크 with Vanilla JS"}}},{"node":{"id":"364ae05f-101b-5720-9ec6-d692d55e0062","fields":{"slug":"/menu-sidebar-modal/"},"frontmatter":{"title":"사이드바, 모달 with Vanilla JS"}}},{"node":{"id":"5abf51b6-6ecd-5d96-879f-5777a606bf0a","fields":{"slug":"/connecting-server-client/"},"frontmatter":{"title":"React && Node.js 연결하기"}}},{"node":{"id":"ac1bef97-c59e-5beb-955b-d8c6e8e742c8","fields":{"slug":"/import-react/"},"frontmatter":{"title":"importing React 와 JSX 사용의 상관관계"}}},{"node":{"id":"2a9c97e2-a6bc-515d-9f47-b1248cf5f9cf","fields":{"slug":"/vsc-react-autoimport/"},"frontmatter":{"title":"VSC 리액트 auto import"}}},{"node":{"id":"bf55c7ac-a772-56fa-b74d-2a0ae1afd342","fields":{"slug":"/useRef/"},"frontmatter":{"title":"리액트 useRef"}}},{"node":{"id":"376677fe-0b5d-57d7-9b3e-95aeb604a67c","fields":{"slug":"/react-debouncing/"},"frontmatter":{"title":"리액트 디바운싱(debouncing)"}}},{"node":{"id":"de4aef09-b0e7-5a98-99a2-d996af28dbff","fields":{"slug":"/react-debugging/"},"frontmatter":{"title":"리액트 크롬 데브툴 디버깅(debugging)"}}},{"node":{"id":"7ddeab05-2689-5d93-a885-948c97b1db0e","fields":{"slug":"/js-semicolon/"},"frontmatter":{"title":"자바스크립트 내에서의 세미콜론(;) 사용"}}},{"node":{"id":"63903bd1-952c-5d18-a931-a4adf22668c4","fields":{"slug":"/js-short-circuit-evaluation/"},"frontmatter":{"title":"자바스크립트 단축 평가"}}},{"node":{"id":"9ab7110e-3675-5155-a3d2-773f12f2b7fc","fields":{"slug":"/js-const/"},"frontmatter":{"title":"자바스크립트 const(constant) 키워드 에 대한 고찰"}}},{"node":{"id":"ef98c32c-b112-56b5-8750-2a65f29a76f8","fields":{"slug":"/js-single-thread/"},"frontmatter":{"title":"싱글스레드인 자바스크립트는 어떻게 비동기 처리를 하는가"}}},{"node":{"id":"50d11bc0-654a-525a-9cd5-220a2335dfc6","fields":{"slug":"/js-indexOf/"},"frontmatter":{"title":"자바스크립트 indexOf() 와 시간 복잡도의 상관관계에 대한 고찰"}}},{"node":{"id":"e83d28ae-8193-56f4-9504-165a7670ea8c","fields":{"slug":"/2021-retrospect/"},"frontmatter":{"title":"2021년 블로그 운영 회고"}}},{"node":{"id":"2f3f5cd2-f838-50db-9e87-f864a0082032","fields":{"slug":"/react-real-code-splitting/"},"frontmatter":{"title":"리액트 Code-splitting 실적용 사례"}}},{"node":{"id":"3653cebd-84f0-5d9f-b911-7e3380e26d2f","fields":{"slug":"/mac-kernal-task/"},"frontmatter":{"title":"맥북 kernel_task 과점유 현상"}}},{"node":{"id":"ac8423e7-cc42-5cf5-8f71-2d94b816c3cc","fields":{"slug":"/js-async-defer/"},"frontmatter":{"title":"자바스크립트 script 태그 async & defer 속성"}}},{"node":{"id":"7500a096-2419-500f-9c14-f6faa8a8b733","fields":{"slug":"/js-reduce-break/"},"frontmatter":{"title":"자바스크립트 reduce break"}}},{"node":{"id":"862d4423-5868-5d5d-ae40-0996bf878f09","fields":{"slug":"/js-linked-list/"},"frontmatter":{"title":"Linked-list with JS"}}}]},"previous":{"fields":{"slug":"/no-global/"},"frontmatter":{"title":"JS - 전역 공간 사용 최소화"}},"next":{"fields":{"slug":"/blog-SEO/"},"frontmatter":{"title":"블로그 SEO"}}},"pageContext":{"id":"08c6f9af-0167-54a0-9af6-45bab9619823","series":null,"previousPostId":"ac5983fa-822c-56a4-840b-2d47c94bfc0f","nextPostId":"c3c7c56b-2c6a-55ea-ba86-de81794050fe"}},"staticQueryHashes":[]}